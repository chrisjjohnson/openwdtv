#!/bin/sh
#  _____             _ _ _ ____  _____ _____ 
# |     |___ ___ ___| | | |    \|_   _|  |  |
# |  |  | . | -_|   | | | |  |  | | | |  |  |
# |_____|  _|___|_|_|_____|____/  |_|  \___/ 
#       |_| http://openwdtv.org

###########
# OPTIONS #
###########
DEBUG=1

#####################
# SETUP ENVIRONMENT #
#####################
. ./sysconfig
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
/bin/mount -t proc none /proc
echo "1 1 1 7" > /proc/sys/kernel/printk
mount -t sysfs sysfs /sys
mount -t usbfs usb /proc/bus/usb
echo /sbin/mdev > /proc/sys/kernel/hotplug
mount -t tmpfs mdev /dev
mkdir /dev/pts
mount -t devpts devpts /dev/pts
mdev -s
mount -t tmpfs none /tmp
mount -t tmpfs none /apps
/bin/hostname -F /etc/hostname

########################
# CREATE INPUT DEVICES #
########################
mkdir -p /dev/input
MINOR=0
while [ $MINOR -lt 17 ]; do
    mknod /dev/input/event$MINOR c 13 `expr $MINOR + 64`;
    MINOR=`expr $MINOR + 1`;
done

####################################
# CREATE SYMLINKS TO BLOCK DEVICES #
####################################
ln -s $SYSCONF_BOOTLOADER_MTD_PARTITION /dev/mtdblock_bootloader
ln -s $SYSCONF_KERNEL_MTD_PARTITION /dev/mtdblock_kernel
ln -s $SYSCONF_FIRMWARE_MTD_PARTITION /dev/mtdblock_romfs

############################
# SETUP TTY LOGIN SECURITY #
############################
[ ! -f /conf/securetty.ori ] && cp /etc/securetty.ori /conf/
ln -s /conf/securetty.ori /tmp/securetty.ori

##############################
# SETUP SHARED LIBRARY LINKS #
##############################
/sbin/ldconfig -C /tmp/ld.so.cache

######################
# LOAD CONFIGURATION #
######################
if [ $DEBUG -eq 0 -a "$1" == "upgrade" ]; then
    # Only load, don't monitor
    /sbin/config_tool -l 
    # Free up some memory
    touch /tmp/STOP_DMARENDER
    touch /tmp/STOP_PICRENDER
else
    # Load config and continue to monitor for changes
    /sbin/config_tool -l -m 10 &
fi

#################################
# MOUNT STATIC CONFIG PARTITION #
#################################
if [ x$SYSCONF_LAST_PARTITION_NODE_NAME != "x" ]; then
    dd if=$SYSCONF_LAST_PARTITION_NODE_NAME of=/tmp/lastblock bs=1024
    mkdir $SYSCONF_STATIC_CONFIG_MOUNT_POINT
    mount -t minix -o loop /tmp/lastblock $SYSCONF_STATIC_CONFIG_MOUNT_POINT
fi

##################
# EXPORT DISPLAY #
##################
export EM8XXX_SERVER=":0"

############################
# CREATE MISC DEVICE NODES #
############################
mknod /dev/mum0 c 126 0
mknod /dev/em8xxx0 c 127 0
mknod /dev/mtdblock3 b 254 6
mknod /dev/mtdblock2 b 254 3
mknod /dev/mtdblock0 b 254 0
mknod /dev/sda1 b 8 1

#mknod /dev/loop0 b 7 0
#mknod /dev/loop1 b 7 1
#mknod /dev/loop2 b 7 2
#mknod /dev/loop3 b 7 3
mknod /dev/loop8 b 7 8
mknod /dev/loop9 b 7 9
mknod /dev/loop10 b 7 10
mknod /dev/loop11 b 7 11
mknod /dev/loop12 b 7 12
mknod /dev/loop13 b 7 13
mknod /dev/loop14 b 7 14
mknod /dev/loop15 b 7 15
mknod /dev/loop16 b 7 16

###################
# RELOAD FIRMWARE #
###################
fw_reload_t3.sh

###########################
# LOAD REALTEK NIC DRIVER #
###########################
modprobe r8169

##################
# LOAD IR MODULE #
##################
MAJOR=254
while [ -f /lib/modules/irkernel.ko ]; do
    insmod /lib/modules/irkernel.ko major_num=$MAJOR;
    if [ $? == 0 ]; then
        mknod /dev/ir c $MAJOR 0
        break;
    fi
    MAJOR=`expr $MAJOR - 1`
    if [ $MAJOR == 1 ]; then
        break;
    fi
done
ln -s /dev/ir /dev/irda

####################################
# LOAD LED AND RESET BUTTON DRIVER #
####################################
MAJOR=254
while [ -f /lib/modules/wd_led_rst.ko ]; do
    insmod /lib/modules/wd_led_rst.ko major_num=$MAJOR;
    if [ $? == 0 ]; then
    mknod /dev/led_rst c $MAJOR 0
        break;
    fi
    MAJOR=`expr $MAJOR - 1`
    if [ $MAJOR == 1 ]; then
        break;
    fi
done

######################################
# LOAD PROCESS STDOUT STDIN PIPELINE #
######################################
[ -f /lib/modules/proc_pipe.ko ] && insmod /lib/modules/proc_pipe.ko

#####################
# POPULATE IR TABLE #
#####################
[ -f /ir_table ] && cat /ir_table > /proc/tangoxfreq/ir_table

##############################
# MISC KERNEL MODULE LOADING #
##############################
# Paragon NTFS driver
[ -f /lib/modules/ufsd.ko ] && insmod /lib/modules/ufsd.ko
# Frequency scaling driver
[ -f /lib/modules/fctrl.ko ] && insmod /lib/modules/fctrl.ko
# llad kernel module for standalone configuration.... WHAT?
[ -f /lib/modules/llad.ko ] && insmod -f /lib/modules/llad.ko

####################
# LOAD CIFS MODULE #
####################
modprobe cifs CIFSMaxBufSize=64512

##########################
# SETUP USB MOUNT POINTS #
##########################
mkdir -p /tmp/media
mkdir -p /tmp/media/usb

###################
# SETUP HOST FILE #
###################
if [ ! -f "/conf/hosts" ]; then
    echo "127.0.0.1 localhost" >> /conf/hosts
    echo "127.0.0.1 `hostname`" >> /conf/hosts
    # Block offical updates
    echo "127.0.0.1 support.wdc.com" >> /conf/hosts
fi
ln -s /conf/hosts /tmp/hosts

##################################
# SETUP LOCAL LOOPBACK INTERFACE #
##################################
ifconfig lo 127.0.0.1

#################################################
# SYMLINK LOGIN CREDENTIALS TO CONFIG PARTITION #
#################################################
[ ! -f "/conf/passwd.conf" ] && cp /etc/passwd.conf /conf/
ln -s /conf/passwd.conf /tmp/passwd.conf
[ ! -f "/conf/shadow.conf" ] && cp /etc/shadow.conf /conf/
ln -s /conf/shadow.conf /tmp/shadow.conf

##################
# ENABLE SYSLOGD #
##################
syslogd -O /tmp/messages

######################
# LOAD CACHE SERVICE #
######################
/bin/memory_cache_server &

#while [ 1 ]; do
#    /bin/sh;
#done

####################
# LOAD CUSTOM APPS #
####################
#if [ "`config read ENABLE_APPS`" == "1" ]; then
#    appmount=/apps/
#    logger -s -t $0 "Scanning external media for app.bin files..."
#    INTAPPS=`find /addons/ -type f -name "*.app.bin"`
#    EXTAPPS=`find /tmp/media/usb/ -type f -name "*.app.bin" -maxdepth 4`
#    for i in $INTAPPS $EXTAPPS; do
#        logger -s -t $0 "Mounting $i on $appmount/$appname..."
#        appname="`basename "$i" | awk -F '.' '{print $1}'`"
#        mkdir "$appmount/$appname"
#        /bin/mount -o loop "$i" "$appmount/$appname"
#    done
#fi

########################
# SPAWN INIT.D SCRIPTS #
########################
if [ $DEBUG -eq 1 ]; then
    logger -s -t $0 "Starting in debug mode..."
    /etc/init.d/rcS&
else
    /etc/init.d/rcS $1 $2 $3&
fi

logger -s -t $0 "OpenWDTV Initialised!"

#################################
# START SUPER HAPPY FUN LOOP :) #
#################################
while [ 1 ]; do
    /bin/sh ;
done
